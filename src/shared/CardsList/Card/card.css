.card {
    background-color: var(--white);
    border-radius: 7px;
    display: flex;
    flex-flow: row wrap;
    position: relative;
}

.card > * {
    flex: 1 1 100%;
}

.createdAt, .createdAt * {
    color: var(--gray99);
}

.publishedLabel {
    display: none;
}

.textContent {
    display: flex;
    flex-direction: column;
    padding: 22px 20px 13px;
}

.metaData {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    font-size: 10px;
    line-height: 12px;
}

.userLink {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    height: 20px;
    padding: 0 6px 0 0;
}

.avatar {
    width: 20px;
    height: 20px;
    margin: 0 7px 0 0;
    border-radius: 20px;
}

.username {
    color: var(--orange);
}

.title {
    font-size: 16px;
    line-height: 19px;
    font-weight: normal;
    margin: 0;
    padding: 7px 0 0;
}

.postLink {
    overflow: hidden;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
}

.preview {
    max-height: 178px;
}

.previewImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.menu {
    position: absolute;
    top: 17px;
    right: 15px;
}

.menuButton {
    width: 31px;
    height: 31px;
    display: flex;
    align-items: center;
    justify-content: center;
    /* transform: rotate(90deg); */
    border-radius: 31px;
    background: transparent;
    border: 0;
}

.menuButton:active, .menuButton:hover {
    background-color: rgba(51, 51, 51, 0.1);
}

.controls {
    padding: 10px 20px;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;
}

.karmaValue {
    padding: 0 4px;
    color: var(--grayC4);
}

.down {
    transform: rotate(180deg);
}

.commentsButton {
    display: flex;
    align-items: normal;
}

.commentsButton * {
    color: var(--grayC4);
}

.commentsNumber {
    padding: 0 0 0 6px;
    font-size: 12px;
    line-height: 14px;
}

.shareButton {
    width: 20px;
    height: 20px;
}

.saveButton {
    padding-left: 7px;
    width: 20px;
    height: 20px;
}

@media all and (min-width: 1024px) {


    .preview {
        max-height: 177px;
    }
    
    .previewImg {
        max-width: 178px;
        height: 100%;
        object-fit: cover;
    }

    .card {
        flex-flow: row-reverse nowrap;
        justify-content: start;
    }

    .card > * {
        flex: none;
    }

    .card:not(:last-child) {
        margin-bottom: 20px;
    }

    .textContent {
        justify-content: center;
        flex-direction: column-reverse;
    }
    
    .metaData {
        flex-direction: row-reverse;
        justify-content: start;
    }   
    
    .createdAt {
        margin-right: 7px;
        display: flex;
    }

    .publishedLabel {
        margin-right: 5px;
        display: flex;
    }    

    .menu {
        position: absolute;
        top: 45px;
        right: 70px;
    }

    .menuButton {
        align-self: center;
        transform: rotate(90deg);
    }

    .controls {
        order: 3;
        flex: 0 0;
        margin: 0;
        padding: 0;
    }

    .karmaCounter {
        position: absolute;
        right: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-flow: column nowrap;
    }

    .karmaValue {
        padding: 4px 0px;
        font-size: 14px;
        line-height: 16px;
        color: var(--black);
    }

    .commentsButton {
        display: none;
    }

    .actions {
        display: none;
    }
}

@media all and (min-width: 1540px) {
    .textContent {
        flex-basis: 672px;
    }

    .karmaCounter {
        position: absolute;
        right: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-flow: column nowrap;
    }

    .card:hover, .card:focus-within {
        outline: 1px solid var(--grayD9);
    }

    .userLink:hover a {
        text-decoration: underline;
    }

    .menuButton:hover {
        background-color: rgba(51, 51, 51, 0.1)
    }

    .karmaCounter > button.up:hover > svg > path {
        fill: var(--green)
    }

    .karmaCounter > button.down:hover > svg > path {
        fill: var(--orange);
    }

    .postLink::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
    }

    .username {
        position: relative;
        z-index: 1;
    }

    .card:hover h2 a, .card:focus-within h2 a {
        color: var(--orange);
    }
}